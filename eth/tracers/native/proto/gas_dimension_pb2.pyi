"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GasesByDimension(google.protobuf.message.Message):
    """GasesByDimension represents the gas consumption for each dimension"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ONE_DIMENSIONAL_GAS_COST_FIELD_NUMBER: builtins.int
    COMPUTATION_FIELD_NUMBER: builtins.int
    STATE_ACCESS_FIELD_NUMBER: builtins.int
    STATE_GROWTH_FIELD_NUMBER: builtins.int
    HISTORY_GROWTH_FIELD_NUMBER: builtins.int
    STATE_GROWTH_REFUND_FIELD_NUMBER: builtins.int
    one_dimensional_gas_cost: builtins.int
    """the total gas cost for the opcode, across all dimensions."""
    computation: builtins.int
    """how much of the gas was used for computation or local memory access, stack operations, etc."""
    state_access: builtins.int
    """how much of the gas was used for state access, like reading or writing to the state."""
    state_growth: builtins.int
    """how much of the gas was used for state growth, like creating new contracts or storage slots."""
    history_growth: builtins.int
    """how much of the gas was used for history growth, like writing to the history (event logs)"""
    state_growth_refund: builtins.int
    """how much gas was refunded for removing state, only applicable to SSTORE opcodes to zero."""
    def __init__(
        self,
        *,
        one_dimensional_gas_cost: builtins.int = ...,
        computation: builtins.int = ...,
        state_access: builtins.int = ...,
        state_growth: builtins.int = ...,
        history_growth: builtins.int = ...,
        state_growth_refund: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["computation", b"computation", "history_growth", b"history_growth", "one_dimensional_gas_cost", b"one_dimensional_gas_cost", "state_access", b"state_access", "state_growth", b"state_growth", "state_growth_refund", b"state_growth_refund"]) -> None: ...

global___GasesByDimension = GasesByDimension

@typing.final
class TxGasDimensionResult(google.protobuf.message.Message):
    """TxGasDimensionByOpcodeExecutionResult represents the execution result"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GAS_USED_FIELD_NUMBER: builtins.int
    GAS_USED_L1_FIELD_NUMBER: builtins.int
    GAS_USED_L2_FIELD_NUMBER: builtins.int
    INTRINSIC_GAS_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    ADJUSTED_REFUND_FIELD_NUMBER: builtins.int
    ROOT_IS_PRECOMPILE_ADJUSTMENT_FIELD_NUMBER: builtins.int
    ROOT_IS_STYLUS_ADJUSTMENT_FIELD_NUMBER: builtins.int
    FAILED_FIELD_NUMBER: builtins.int
    TRANSACTION_REVERTED_FIELD_NUMBER: builtins.int
    TX_HASH_FIELD_NUMBER: builtins.int
    BLOCK_NUMBER_FIELD_NUMBER: builtins.int
    gas_used: builtins.int
    """the total amount of gas used in the transaction"""
    gas_used_l1: builtins.int
    """the gas paid to post the compressed transaction to the L1 chain"""
    gas_used_l2: builtins.int
    """the gas paid to execute the transaction on the L2 chain"""
    intrinsic_gas: builtins.int
    """the intrinsic gas of the transaction, the static cost + calldata bytes cost"""
    adjusted_refund: builtins.int
    """the adjusted gas refund amount after EIP-3529"""
    root_is_precompile_adjustment: builtins.int
    """the adjustment to the gas used for the root of the transaction if it is a precompile"""
    root_is_stylus_adjustment: builtins.int
    """the adjustment to the gas used for the root of the transaction if it is a stylus contract"""
    failed: builtins.bool
    """whether the transaction broke the rules of the VM and was rejected"""
    transaction_reverted: builtins.bool
    """the status of the transaction, for a valid transaction that followed the rules,
    but could have still failed for reasons inside the rules, like reverts, out of gas, etc.
    """
    tx_hash: builtins.str
    """the hash of the transaction"""
    block_number: builtins.int
    """the number of the block"""
    @property
    def dimensions(self) -> global___GasesByDimension:
        """the sum of the gas consumption categorized by dimension for that transaction"""

    def __init__(
        self,
        *,
        gas_used: builtins.int = ...,
        gas_used_l1: builtins.int = ...,
        gas_used_l2: builtins.int = ...,
        intrinsic_gas: builtins.int = ...,
        dimensions: global___GasesByDimension | None = ...,
        adjusted_refund: builtins.int | None = ...,
        root_is_precompile_adjustment: builtins.int | None = ...,
        root_is_stylus_adjustment: builtins.int | None = ...,
        failed: builtins.bool | None = ...,
        transaction_reverted: builtins.bool | None = ...,
        tx_hash: builtins.str = ...,
        block_number: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_adjusted_refund", b"_adjusted_refund", "_failed", b"_failed", "_root_is_precompile_adjustment", b"_root_is_precompile_adjustment", "_root_is_stylus_adjustment", b"_root_is_stylus_adjustment", "_transaction_reverted", b"_transaction_reverted", "adjusted_refund", b"adjusted_refund", "dimensions", b"dimensions", "failed", b"failed", "root_is_precompile_adjustment", b"root_is_precompile_adjustment", "root_is_stylus_adjustment", b"root_is_stylus_adjustment", "transaction_reverted", b"transaction_reverted"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_adjusted_refund", b"_adjusted_refund", "_failed", b"_failed", "_root_is_precompile_adjustment", b"_root_is_precompile_adjustment", "_root_is_stylus_adjustment", b"_root_is_stylus_adjustment", "_transaction_reverted", b"_transaction_reverted", "adjusted_refund", b"adjusted_refund", "block_number", b"block_number", "dimensions", b"dimensions", "failed", b"failed", "gas_used", b"gas_used", "gas_used_l1", b"gas_used_l1", "gas_used_l2", b"gas_used_l2", "intrinsic_gas", b"intrinsic_gas", "root_is_precompile_adjustment", b"root_is_precompile_adjustment", "root_is_stylus_adjustment", b"root_is_stylus_adjustment", "transaction_reverted", b"transaction_reverted", "tx_hash", b"tx_hash"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_adjusted_refund", b"_adjusted_refund"]) -> typing.Literal["adjusted_refund"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_failed", b"_failed"]) -> typing.Literal["failed"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_root_is_precompile_adjustment", b"_root_is_precompile_adjustment"]) -> typing.Literal["root_is_precompile_adjustment"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_root_is_stylus_adjustment", b"_root_is_stylus_adjustment"]) -> typing.Literal["root_is_stylus_adjustment"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_transaction_reverted", b"_transaction_reverted"]) -> typing.Literal["transaction_reverted"] | None: ...

global___TxGasDimensionResult = TxGasDimensionResult

@typing.final
class TxGasDimensionResultBatch(google.protobuf.message.Message):
    """batch results to disk for performance"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TxGasDimensionResult]: ...
    def __init__(
        self,
        *,
        results: collections.abc.Iterable[global___TxGasDimensionResult] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["results", b"results"]) -> None: ...

global___TxGasDimensionResultBatch = TxGasDimensionResultBatch

@typing.final
class BlockInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    INSERT_DURATION_NANOSECONDS_FIELD_NUMBER: builtins.int
    BASE_FEE_FIELD_NUMBER: builtins.int
    BLOCK_NUMBER_FIELD_NUMBER: builtins.int
    timestamp: builtins.int
    """the timestamp of the block"""
    insert_duration_nanoseconds: builtins.int
    """how long it took to insert the block"""
    base_fee: builtins.int
    """block base fee"""
    block_number: builtins.int
    """the number of the block"""
    def __init__(
        self,
        *,
        timestamp: builtins.int = ...,
        insert_duration_nanoseconds: builtins.int = ...,
        base_fee: builtins.int = ...,
        block_number: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["base_fee", b"base_fee", "block_number", b"block_number", "insert_duration_nanoseconds", b"insert_duration_nanoseconds", "timestamp", b"timestamp"]) -> None: ...

global___BlockInfo = BlockInfo

@typing.final
class BlockInfoBatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLOCKS_FIELD_NUMBER: builtins.int
    @property
    def blocks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BlockInfo]: ...
    def __init__(
        self,
        *,
        blocks: collections.abc.Iterable[global___BlockInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["blocks", b"blocks"]) -> None: ...

global___BlockInfoBatch = BlockInfoBatch
